* Gauthali

A simple tool to play music on multiple devices at once.

Try it out at: [[http://gauthali.westus2.cloudapp.azure.com]]

* Usage

- Start the server
- Go to the url of server from multiple devices
- Upload audio, it will now be played in all devices simultaneously and insync

* Server Setup

** Install Requirements
This project uses =uv= to manage dependencies. If you don't have =uv= installed, do so as follows:
   #+begin_src shell
   curl -LsSf https://astral.sh/uv/install.sh | sh
   #+end_src

Now,
1. Run the =uv sync= command to create python virtual environment and install the requirements:
#+begin_src shell
  uv sync
#+end_src

2. Install ~ffmpeg~ in your system (we require this to decode the audio file uploaded by user)

#+begin_src shell
  # Linux
  sudo apt install ffmpeg
  # MacOS
  sudo brew install ffmpeg
#+end_src

** Run Server

To run production server you can use `gunicorn` or other servers:
#+begin_src
    source .venv/bin/activate
    gunicorn -w 1 'server:app' -b 0.0.0.0:5000
#+end_src

During developement you can run the server as: `python server.py`

** Port Forwarding

If you run the server as above, it will serve external requests at port 5000. To serve requests at port 80 you can use port forwarding using iptables as follows:

#+begin_src shell
  ## Forward external requests to 80 towards 500
  sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 5000
#+end_src

Note that this doesn't forward internal requests to port 80 towards port 5000. So if you try `curl localhost:80` it won't work. Either use port 5000 : `curl localhost:5000` or use public ip/domain name of your server: `curl public-ip-of-server:80`.
